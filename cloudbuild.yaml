options:
  env:
    # buildkit required to precisely target/build individual stages
    - DOCKER_BUILDKIT=1

steps:
  # Login to Docker Hub
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args: ["-c", "docker login --username=$$USERNAME --password=$$PASSWORD"]
    secretEnv: ["USERNAME", "PASSWORD"]

  # # Build the pcg-build stage and push it to the registry for caching
  # - name: "gcr.io/kaniko-project/executor:latest"
  #   args:
  #     - "--target=pcg-build"
  #     - "--cache=true"
  #     - "--destination=gcr.io/$PROJECT_ID/pychunkedgraph:pcg-build"
  #   waitFor: ["-"]

  # # Build the bigtable-emulator-build stage and push it to the registry for caching
  # - name: "gcr.io/kaniko-project/executor:latest"
  #   args:
  #     - "--target=bigtable-emulator-build"
  #     - "--cache=true"
  #     - "--destination=gcr.io/$PROJECT_ID/pychunkedgraph:bigtable-emulator-build"
  #   id: "build-bigtable-emulator-build"
  #   waitFor: ["-"]

  # Finally, build the final image, using cached versions for previous stages
  - name: "gcr.io/kaniko-project/executor:latest"
    args:
      - "--cache=true"
      - "--destination=gcr.io/$PROJECT_ID/pychunkedgraph:$TAG_NAME"
    id: "build-final-image"
    timeout: 600s

  # Additional tag with username
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      [
        "-c",
        "docker tag gcr.io/$PROJECT_ID/pychunkedgraph:$TAG_NAME $$USERNAME/pychunkedgraph:$TAG_NAME",
      ]
    waitFor: ["build-final-image"]
    id: "tag-final-image"
    secretEnv: ["USERNAME"]

  # Push the final image to Dockerhub
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args: ["-c", "docker push $$USERNAME/pychunkedgraph:$TAG_NAME"]
    waitFor: ["tag-final-image"]
    secretEnv: ["USERNAME"]

# images:
#   # Kaniko already takes care of these images
#   - "gcr.io/$PROJECT_ID/pychunkedgraph:pcg-build"
#   - "gcr.io/$PROJECT_ID/pychunkedgraph:bigtable-emulator-build"
#   - "gcr.io/$PROJECT_ID/pychunkedgraph:$TAG_NAME"

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/docker-password/versions/1
      env: "PASSWORD"
    - versionName: projects/$PROJECT_ID/secrets/docker-username/versions/1
      env: "USERNAME"
